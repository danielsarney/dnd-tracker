# Generated by Django 4.2.23 on 2025-10-16 19:27

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('monsters', '0001_initial'),
        ('players', '0001_initial'),
        ('campaigns', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Encounter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='The name of the encounter', max_length=200)),
                ('description', models.TextField(blank=True, help_text='Detailed description of the encounter scenario', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when the encounter was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when the encounter was last modified')),
                ('campaign', models.ForeignKey(help_text='The campaign this encounter belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='encounters', to='campaigns.campaign')),
                ('monsters', models.ManyToManyField(help_text='Monsters involved in this encounter', related_name='encounters', to='monsters.monster')),
                ('players', models.ManyToManyField(help_text='Player characters participating in this encounter', related_name='encounters', to='players.player')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CombatSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('current_round', models.PositiveIntegerField(default=1, help_text='The current combat round')),
                ('current_turn_index', models.PositiveIntegerField(default=0, help_text='Index of current participant in initiative order')),
                ('is_active', models.BooleanField(default=True, help_text='Whether combat is currently active')),
                ('started_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when combat began')),
                ('ended_at', models.DateTimeField(blank=True, help_text='Timestamp when combat ended', null=True)),
                ('encounter', models.OneToOneField(help_text='The encounter this combat session belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='combat_session', to='combat_tracker.encounter')),
            ],
            options={
                'ordering': ['-started_at'],
            },
        ),
        migrations.CreateModel(
            name='CombatParticipant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('participant_type', models.CharField(choices=[('player', 'Player'), ('monster', 'Monster')], help_text='Whether this is a player character or monster', max_length=10)),
                ('initiative', models.IntegerField(help_text='Initiative roll result for turn order')),
                ('current_hp', models.IntegerField(help_text='Current hit points')),
                ('max_hp', models.IntegerField(help_text='Maximum hit points')),
                ('is_dead', models.BooleanField(default=False, help_text='Whether this participant is dead or unconscious')),
                ('turn_completed', models.BooleanField(default=False, help_text='Whether the current turn is completed')),
                ('combat_session', models.ForeignKey(help_text='The combat session this participant belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='participants', to='combat_tracker.combatsession')),
                ('monster', models.ForeignKey(blank=True, help_text="Monster (if participant_type is 'monster')", null=True, on_delete=django.db.models.deletion.CASCADE, to='monsters.monster')),
                ('player', models.ForeignKey(blank=True, help_text="Player character (if participant_type is 'player')", null=True, on_delete=django.db.models.deletion.CASCADE, to='players.player')),
            ],
            options={
                'ordering': ['-initiative', 'participant_type'],
            },
        ),
    ]
