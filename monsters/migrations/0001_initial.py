# Generated by Django 4.2.23 on 2025-10-16 19:27

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Monster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='The name of the monster or creature', max_length=200)),
                ('ac', models.PositiveIntegerField(help_text='Armor Class')),
                ('initiative', models.CharField(help_text="Initiative bonus (e.g., '+16')", max_length=50)),
                ('hp', models.CharField(help_text="Hit Points with dice notation (e.g., '333 (29d10 + 174)')", max_length=100)),
                ('speed', models.CharField(help_text="Movement speeds (e.g., '40 ft, Swim 10ft')", max_length=200)),
                ('strength', models.CharField(help_text="Strength score (e.g., '24 +7')", max_length=50)),
                ('strength_mod', models.CharField(default='+0', help_text="Strength Modifier (e.g., '+7')", max_length=20)),
                ('strength_save', models.CharField(default='+0', help_text="Strength Saving Throw (e.g., '+7')", max_length=20)),
                ('dexterity', models.CharField(help_text="Dexterity score (e.g., '19 +4')", max_length=50)),
                ('dexterity_mod', models.CharField(default='+0', help_text="Dexterity Modifier (e.g., '+4')", max_length=20)),
                ('dexterity_save', models.CharField(default='+0', help_text="Dexterity Saving Throw (e.g., '+4')", max_length=20)),
                ('constitution', models.CharField(help_text='Constitution score', max_length=50)),
                ('constitution_mod', models.CharField(default='+0', help_text='Constitution Modifier', max_length=20)),
                ('constitution_save', models.CharField(default='+0', help_text='Constitution Saving Throw', max_length=20)),
                ('intelligence', models.CharField(help_text='Intelligence score', max_length=50)),
                ('intelligence_mod', models.CharField(default='+0', help_text='Intelligence Modifier', max_length=20)),
                ('intelligence_save', models.CharField(default='+0', help_text='Intelligence Saving Throw', max_length=20)),
                ('wisdom', models.CharField(help_text='Wisdom score', max_length=50)),
                ('wisdom_mod', models.CharField(default='+0', help_text='Wisdom Modifier', max_length=20)),
                ('wisdom_save', models.CharField(default='+0', help_text='Wisdom Saving Throw', max_length=20)),
                ('charisma', models.CharField(help_text='Charisma score', max_length=50)),
                ('charisma_mod', models.CharField(default='+0', help_text='Charisma Modifier', max_length=20)),
                ('charisma_save', models.CharField(default='+0', help_text='Charisma Saving Throw', max_length=20)),
                ('skills', models.TextField(blank=True, help_text='Skills and proficiencies', null=True)),
                ('resistances', models.TextField(blank=True, help_text='Damage resistances', null=True)),
                ('immunities', models.TextField(blank=True, help_text='Damage immunities', null=True)),
                ('vulnerabilities', models.TextField(blank=True, help_text='Damage vulnerabilities', null=True)),
                ('senses', models.TextField(blank=True, help_text="Special senses (e.g., 'darkvision 60ft')", null=True)),
                ('languages', models.TextField(blank=True, help_text='Languages the monster knows', null=True)),
                ('gear', models.TextField(blank=True, help_text='Equipment, weapons, armor, and other gear', null=True)),
                ('challenge_rating', models.CharField(help_text="Challenge Rating (e.g., 'CR 20')", max_length=20)),
                ('traits', models.TextField(blank=True, help_text='Special traits and abilities', null=True)),
                ('actions', models.TextField(blank=True, help_text='Standard actions', null=True)),
                ('bonus_actions', models.TextField(blank=True, help_text='Bonus actions', null=True)),
                ('reactions', models.TextField(blank=True, help_text='Reactions', null=True)),
                ('legendary_actions', models.TextField(blank=True, help_text='Legendary actions (for legendary creatures)', null=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
    ]
